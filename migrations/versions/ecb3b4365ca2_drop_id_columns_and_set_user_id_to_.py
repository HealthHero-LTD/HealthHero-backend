"""Drop id columns and set user_id to primary keys

Revision ID: ecb3b4365ca2
Revises: 42a74c341f96
Create Date: 2024-02-20 00:17:45.341189

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "ecb3b4365ca2"
down_revision = "42a74c341f96"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("daily_sqla", schema=None) as batch_op:
        batch_op.drop_constraint("daily_sqla_user_id_fkey", type_="foreignkey")
        # batch_op.create_foreign_key(None, "users_sqla", ["user_id"], ["user_id"])
        batch_op.drop_column("id")

    with op.batch_alter_table("users_sqla", schema=None) as batch_op:
        batch_op.drop_constraint("users_sqla_user_id_key", type_="unique")
        batch_op.drop_column("id")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users_sqla", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "id",
                sa.INTEGER(),
                server_default=sa.text("nextval('users_sqla_id_seq'::regclass)"),
                autoincrement=True,
                nullable=False,
            )
        )
        batch_op.create_unique_constraint("users_sqla_user_id_key", ["user_id"])

    with op.batch_alter_table("daily_sqla", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False)
        )
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "daily_sqla_user_id_fkey", "users_sqla", ["user_id"], ["id"]
        )

    op.create_table(
        "daily",
        sa.Column(
            "user_id", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "daily_xp",
            sa.INTEGER(),
            server_default=sa.text("0"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "daily_date",
            sa.DATE(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=True,
        ),
        sa.UniqueConstraint("user_id", "daily_date", name="user_daily_date_unique"),
    )
    op.create_table(
        "users",
        sa.Column(
            "user_id", sa.VARCHAR(length=256), autoincrement=False, nullable=False
        ),
        sa.Column(
            "username", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("level", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("email", sa.VARCHAR(length=255), autoincrement=False, nullable=True),
        sa.Column("xp", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("last_active_date", sa.DATE(), autoincrement=False, nullable=True),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index("unique_username", ["username"], unique=True)

    # ### end Alembic commands ###
